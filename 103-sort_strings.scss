@use '103-sort_list' as sortlist;
@use 'sass:list';
@use 'sass:string';

@function simple-sort($items) {
  $sorted: ();
  $remaining: $items;
  
  @while list.length($remaining) > 0 {
    $smallest: list.nth($remaining, 1);
    $pos: 1;
    
    @for $i from 1 through list.length($remaining) {
      $current: list.nth($remaining, $i);
      @if compare($current, $smallest) {
        $smallest: $current;
        $pos: $i;
      }
    }
    
    $sorted: list.append($sorted, $smallest);
    $new-remaining: ();
    
    @for $j from 1 through list.length($remaining) {
      @if $j != $pos {
        $new-remaining: list.append($new-remaining, list.nth($remaining, $j));
      }
    }
    
    $remaining: $new-remaining;
  }
  
  @return $sorted;
}

@function compare($a, $b) {
  $word1: string.to-lower-case(#{$a});
  $word2: string.to-lower-case(#{$b});
  
  $len1: string.length($word1);
  $len2: string.length($word2);
  $max: if($len1 > $len2, $len1, $len2);
  
  @for $i from 1 through $max {
    $char1: if($i <= $len1, string.slice($word1, $i, $i), "");
    $char2: if($i <= $len2, string.slice($word2, $i, $i), "");
    
    @if $char1 != $char2 {
      @return get-order($char1) < get-order($char2);
    }
  }
  
  @return $len1 < $len2;
}

@function get-order($c) {
  @if $c == "" { @return 0; }
  $abc: "abcdefghijklmnopqrstuvwxyz";
  $index: string.index($abc, $c);
  @return if($index, $index, 999);
}

@debug simple-sort(sortlist.$list_to_sort);
