@import '103-sort_list';

@function sort-list($list) {
  @if length($list) <= 1 {
    @return $list;
  }
  
  $result: ();
  $temp-list: $list;
  
  @while length($temp-list) > 0 {
    $min-item: nth($temp-list, 1);
    $min-index: 1;
    
    @for $i from 2 through length($temp-list) {
      $current-item: nth($temp-list, $i);
      @if is-before($current-item, $min-item) {
        $min-item: $current-item;
        $min-index: $i;
      }
    }
    
    $result: append($result, $min-item);
    $new-list: ();
    
    @for $j from 1 through length($temp-list) {
      @if $j != $min-index {
        $new-list: append($new-list, nth($temp-list, $j));
      }
    }
    
    $temp-list: $new-list;
  }
  
  @return $result;
}

@function is-before($word1, $word2) {
  $w1: to-lower-case($word1 + '');
  $w2: to-lower-case($word2 + '');
  
  $max-length: if(str-length($w1) > str-length($w2), str-length($w1), str-length($w2));
  
  @for $pos from 1 through $max-length {
    $c1: if($pos <= str-length($w1), str-slice($w1, $pos, $pos), '');
    $c2: if($pos <= str-length($w2), str-slice($w2, $pos, $pos), '');
    
    @if $c1 != $c2 {
      @return get-char-order($c1) < get-char-order($c2);
    }
  }
  
  @return str-length($w1) < str-length($w2);
}

@function get-char-order($char) {
  @if $char == '' {
    @return 0;
  }
  
  $letters: 'abcdefghijklmnopqrstuvwxyz';
  $position: str-index($letters, $char);
  @return if($position, $position, 999);
}

@debug sort-list($list_to_sort);